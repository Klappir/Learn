{"version":3,"sources":["webpack:///../Documents/generate_types.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,8MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,gCADR,gCAGA,iBAAQ,CACN,GAAM,mBADR,mBAGA,sBACE,kBAAIC,WAAW,MACb,iBAAGA,WAAW,MAAd,mDAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,4CAGJ,sBACE,kBAAIA,WAAW,MAAf,0BAEF,iBAAQ,CACN,GAAM,6BADR,6BAGA,8BACE,iBAAGA,WAAW,cAAa,0BAAYA,WAAW,KAAvB,6EAE7B,oMAEA,iBAAQ,CACN,GAAM,iCADR,iCAGA,8BACE,iBAAGA,WAAW,cAAa,0BAAYA,WAAW,KAAvB,gIAE7B,uHACA,+EAA8D,0BAAYA,WAAW,KAAvB,4BAC9D,8EACA,gFAA+D,0BAAYA,WAAW,KAAvB,6BAC/D,iBAAQ,CACN,GAAM,gBADR,gBAGA,2CAA0B,0BAAYA,WAAW,KAAvB,2CAA1B,2GAEF,0BAAYA,WAAW,KAAvB,oCACE,oGACA,iBAAQ,CACN,GAAM,UADR,UAGA,qBAAG,mBAAGA,WAAW,KAAQ,CACrB,KAAQ,0DADT,0DAGH,iBAAQ,CACN,GAAM,iCADR,mC,qMAOJJ,EAAWK,gBAAiB","file":"component---documents-generate-types-mdx-5a60455cf8630276c1bb.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/hjalti/Klappir_docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"generates-types-from-graphql\"\n    }}>{`Generates types from graphql`}</h1>\n    <h2 {...{\n      \"id\": \"apollo-commands\"\n    }}>{`Apollo commands`}</h2>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Make sure you are in klappir core client route`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Make sure you can run appollo commands`}</p>\n      </li>\n    </ol>\n    <ul>\n      <li parentName=\"ul\">{`npm install -g apollo`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"first-download-the-schema\"\n    }}>{`First download the schema`}</h3>\n    <blockquote>\n      <p parentName=\"blockquote\"><inlineCode parentName=\"p\">{`apollo client:download-schema --endpoint=http://localhost:8081/graphql;`}</inlineCode></p>\n    </blockquote>\n    <p>{`Schema has already been established in klappir core client. Just make sure to get latest version.\nYou can use any of our graphql endpoints if you are not hosting locally.`}</p>\n    <h3 {...{\n      \"id\": \"generate-types-from-your-file\"\n    }}>{`Generate types from your file`}</h3>\n    <blockquote>\n      <p parentName=\"blockquote\"><inlineCode parentName=\"p\">{`apollo client:codegen  --target=\"typescript\" --clientName=\"graphql\" --globalTypesFile=\"./src/__generated__/globalTypes.ts\"`}</inlineCode></p>\n    </blockquote>\n    <p>{`--queries is a file wich contains the query. You will need to name the query for this to work.`}</p>\n    <p>{`--queries which you want to include are located in the `}<inlineCode parentName=\"p\">{`client/apollo.config.js`}</inlineCode></p>\n    <p>{`You should be able to use a * to generate more files.`}</p>\n    <p>{`The new generated file will be available inside folder: `}<inlineCode parentName=\"p\">{`client/src/__generated__`}</inlineCode></p>\n    <h3 {...{\n      \"id\": \"global-types\"\n    }}>{`Global types`}</h3>\n    <p>{`Will be in folder: `}<inlineCode parentName=\"p\">{`client/src/__generated__/globalTypes.ts`}</inlineCode>{`\nSince each time it gets overwritten by apollo codegen you should copy paste new generated code into:\n`}<inlineCode parentName=\"p\">{`client/src/types/globalTypes.ts`}</inlineCode></p>\n    <p>{`It is possible to generate files where your files are located with --schema`}</p>\n    <h4 {...{\n      \"id\": \"source\"\n    }}>{`Source`}</h4>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://www.leighhalliday.com/generating-types-apollo\"\n      }}>{`https://www.leighhalliday.com/generating-types-apollo`}</a></p>\n    <h6 {...{\n      \"id\": \"written-by-hjalti-aka-dr-docz\"\n    }}>{`Written by Hjalti AKA Dr. Docz`}</h6>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}