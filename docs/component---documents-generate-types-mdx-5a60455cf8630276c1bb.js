(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{"6UZ8":function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return r})),n.d(t,"default",(function(){return b}));n("5hJT"),n("W1QL"),n("K/PF"),n("t91x"),n("75LO"),n("PJhk"),n("mXGw");var l=n("SAVP"),a=n("TjRS");n("aD51");function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var l in n)Object.prototype.hasOwnProperty.call(n,l)&&(e[l]=n[l])}return e}).apply(this,arguments)}var r={};void 0!==r&&r&&r===Object(r)&&Object.isExtensible(r)&&!r.hasOwnProperty("__filemeta")&&Object.defineProperty(r,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"Documents/generate_types.mdx"}});var i={_frontmatter:r},c=a.a;function b(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,l,a={},o=Object.keys(e);for(l=0;l<o.length;l++)n=o[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,["components"]);return Object(l.b)(c,o({},i,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h1",{id:"generates-types-from-graphql"},"Generates types from graphql"),Object(l.b)("h2",{id:"apollo-commands"},"Apollo commands"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Make sure you are in klappir core client route")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Make sure you can run appollo commands"))),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"npm install -g apollo")),Object(l.b)("h3",{id:"first-download-the-schema"},"First download the schema"),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},Object(l.b)("inlineCode",{parentName:"p"},"apollo client:download-schema --endpoint=http://localhost:8081/graphql;"))),Object(l.b)("p",null,"Schema has already been established in klappir core client. Just make sure to get latest version.\nYou can use any of our graphql endpoints if you are not hosting locally."),Object(l.b)("h3",{id:"generate-types-from-your-file"},"Generate types from your file"),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},Object(l.b)("inlineCode",{parentName:"p"},'apollo client:codegen  --target="typescript" --clientName="graphql" --globalTypesFile="./src/__generated__/globalTypes.ts"'))),Object(l.b)("p",null,"--queries is a file wich contains the query. You will need to name the query for this to work."),Object(l.b)("p",null,"--queries which you want to include are located in the ",Object(l.b)("inlineCode",{parentName:"p"},"client/apollo.config.js")),Object(l.b)("p",null,"You should be able to use a * to generate more files."),Object(l.b)("p",null,"The new generated file will be available inside folder: ",Object(l.b)("inlineCode",{parentName:"p"},"client/src/__generated__")),Object(l.b)("h3",{id:"global-types"},"Global types"),Object(l.b)("p",null,"Will be in folder: ",Object(l.b)("inlineCode",{parentName:"p"},"client/src/__generated__/globalTypes.ts"),"\nSince each time it gets overwritten by apollo codegen you should copy paste new generated code into:\n",Object(l.b)("inlineCode",{parentName:"p"},"client/src/types/globalTypes.ts")),Object(l.b)("p",null,"It is possible to generate files where your files are located with --schema"),Object(l.b)("h4",{id:"source"},"Source"),Object(l.b)("p",null,Object(l.b)("a",o({parentName:"p"},{href:"https://www.leighhalliday.com/generating-types-apollo"}),"https://www.leighhalliday.com/generating-types-apollo")),Object(l.b)("h6",{id:"written-by-hjalti-aka-dr-docz"},"Written by Hjalti AKA Dr. Docz"))}b&&b===Object(b)&&Object.isExtensible(b)&&!b.hasOwnProperty("__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"Documents/generate_types.mdx"}}),b.isMDXComponent=!0}}]);
//# sourceMappingURL=component---documents-generate-types-mdx-5a60455cf8630276c1bb.js.map